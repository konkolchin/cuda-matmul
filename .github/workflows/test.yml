name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install CUDA toolkit (without drivers)
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg lsb-release
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
        sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
        wget https://developer.download.nvidia.com/compute/cuda/12.3.2/local_installers/cuda-repo-ubuntu2204-12-3-local_12.3.2-545.23.08-1_amd64.deb
        sudo dpkg -i cuda-repo-ubuntu2204-12-3-local_12.3.2-545.23.08-1_amd64.deb
        sudo cp /var/cuda-repo-ubuntu2204-12-3-local/cuda-*-keyring.gpg /usr/share/keyrings/
        sudo apt-get update
        # Install only the toolkit components, skip drivers
        sudo apt-get install -y cuda-toolkit-12-3 cuda-libraries-12-3 cuda-compiler-12-3 cuda-cudart-12-3 cuda-cudart-dev-12-3 cuda-nvcc-12-3

    - name: Set up CUDA environment
      run: |
        echo "CUDA_HOME=/usr/local/cuda-12.3" >> $GITHUB_ENV
        echo "/usr/local/cuda-12.3/lib64" | sudo tee /etc/ld.so.conf.d/cuda.conf
        sudo ldconfig
        echo "PATH=/usr/local/cuda-12.3/bin:$PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/usr/local/cuda-12.3/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt-get install -y cmake build-essential
        python -m pip install --upgrade pip
        pip install numpy pytest

    - name: Build
      run: |
        export CUDA_HOME=/usr/local/cuda-12.3
        export PATH=$CUDA_HOME/bin:$PATH
        export LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
        chmod +x build.sh
        ./build.sh

    - name: Run tests
      run: |
        cd tests
        python -m pytest test_matrix_ops.py -v